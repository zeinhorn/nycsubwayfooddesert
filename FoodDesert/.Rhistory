mutate(ship_cost_x = ifelse(`Str Nbr` == "1" & Supplier == "A",
2540,
ifelse(`Str Nbr` == "2" & Supplier == "A",
1640,
1200))) %>%
mutate(ship_cost_y = ifelse(`Str Nbr` == "1" & Supplier == "A",
0.12*ship_weight,
ifelse(`Str Nbr` == "2" & Supplier == "B",
0.04*ship_weight,
0.07*ship_weight)))
#compare shipment costs per week
ship_costs <-ship_costs %>%
mutate(cheapest_shipping = ifelse(ship_cost_x> ship_cost_y,
ship_cost_y,
ship_cost_x)) %>%
mutate(cheapest_carrier = ifelse(ship_cost_x> ship_cost_y,
"y",
"x"))
#total the year
sum(ship_costs$cheapest_shipping)
order_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/orders.csv")
shipment_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/shipments.csv")
rates <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/carrier_rates.csv")
shipment_Data <- shipment_Data[,-5] #import cleanup
rates <- rates[,-5]
#make a new dataframe that holds the projected sales for next year
order_Data_2015 <- order_Data
order_Data_2015$`Order Qty` <- ceiling(order_Data_2015$`Order Qty` *1.10) # 10% sales increase
order_Data_2015$`Order Weight`<- order_Data_2015$`Product Weight` * order_Data_2015$`Order Qty` # recalculate order weights
order_Data_2015$`Order Dt` <- str_replace_all(order_Data_2015$`Order Dt`,
"/14$|/15$","") #remove the years
#filter our wrench orders so we can calculate hammer projected orders
wrench_orders <- order_Data_2015 %>%
filter(`Product Id` == 1)
#Make a hammer_orders data frame
hammer_orders <- wrench_orders
hammer_orders$`Product Id` <- 4
hammer_orders$`Product Weight` <- 2.0
hammer_orders$`Order Weight`<- hammer_orders$`Product Weight` * hammer_orders$`Order Qty`
#put hammer orders into the order data frame
order_Data_2015 <- full_join(order_Data_2015,
hammer_orders)
for(i in 0:1){
#reverse engineer shipment data from order data
shipment_data_created <- order_Data_2015 %>%
group_by(`Order Dt`,Supplier,`Str Nbr`) %>%
summarise(ship_weight = sum(`Order Weight`))
#add shipment costs for x and y
ship_costs <- shipment_data_created %>%
mutate(ship_cost_x = ifelse(`Str Nbr` == "1" & Supplier == "A",
2540,
ifelse(`Str Nbr` == "2" & Supplier == "A",
1640,
1200))) %>%
mutate(ship_cost_y = ifelse(`Str Nbr` == "1" & Supplier == "A",
0.12*ship_weight,
ifelse(`Str Nbr` == "2" & Supplier == "B",
0.04*ship_weight,
0.07*ship_weight)))
#compare shipment costs per week
ship_costs <-ship_costs %>%
mutate(cheapest_shipping = ifelse(ship_cost_x> ship_cost_y,
ship_cost_y,
ship_cost_x)) %>%
mutate(cheapest_carrier = ifelse(ship_cost_x> ship_cost_y,
"y",
"x"))
#total the year
sum(ship_costs$cheapest_shipping)
#change supplier to be for second run
hammer_orders$Supplier <- "B"
}
order_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/orders.csv")
shipment_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/shipments.csv")
rates <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/carrier_rates.csv")
shipment_Data <- shipment_Data[,-5] #import cleanup
rates <- rates[,-5]
#make a new dataframe that holds the projected sales for next year
order_Data_2015 <- order_Data
order_Data_2015$`Order Qty` <- ceiling(order_Data_2015$`Order Qty` *1.10) # 10% sales increase
order_Data_2015$`Order Weight`<- order_Data_2015$`Product Weight` * order_Data_2015$`Order Qty` # recalculate order weights
order_Data_2015$`Order Dt` <- str_replace_all(order_Data_2015$`Order Dt`,
"/14$|/15$","") #remove the years
#filter our wrench orders so we can calculate hammer projected orders
wrench_orders <- order_Data_2015 %>%
filter(`Product Id` == 1)
#Make a hammer_orders data frame
hammer_orders <- wrench_orders
hammer_orders$`Product Id` <- 4
hammer_orders$`Product Weight` <- 2.0
hammer_orders$`Order Weight`<- hammer_orders$`Product Weight` * hammer_orders$`Order Qty`
#put hammer orders into the order data frame
order_Data_2015 <- full_join(order_Data_2015,
hammer_orders)
for(i in 0:1){
#reverse engineer shipment data from order data
shipment_data_created <- order_Data_2015 %>%
group_by(`Order Dt`,Supplier,`Str Nbr`) %>%
summarise(ship_weight = sum(`Order Weight`))
#add shipment costs for x and y
ship_costs <- shipment_data_created %>%
mutate(ship_cost_x = ifelse(`Str Nbr` == "1" & Supplier == "A",
2540,
ifelse(`Str Nbr` == "2" & Supplier == "A",
1640,
1200))) %>%
mutate(ship_cost_y = ifelse(`Str Nbr` == "1" & Supplier == "A",
0.12*ship_weight,
ifelse(`Str Nbr` == "2" & Supplier == "B",
0.04*ship_weight,
0.07*ship_weight)))
#compare shipment costs per week
ship_costs <-ship_costs %>%
mutate(cheapest_shipping = ifelse(ship_cost_x> ship_cost_y,
ship_cost_y,
ship_cost_x)) %>%
mutate(cheapest_carrier = ifelse(ship_cost_x> ship_cost_y,
"y",
"x"))
#total the year
print(sum(ship_costs$cheapest_shipping))
#change supplier to be for second run
hammer_orders$Supplier <- "B"
}
order_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/orders.csv")
shipment_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/shipments.csv")
rates <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/carrier_rates.csv")
shipment_Data <- shipment_Data[,-5] #import cleanup
rates <- rates[,-5]
#make a new dataframe that holds the projected sales for next year
order_Data_2015 <- order_Data
order_Data_2015$`Order Qty` <- ceiling(order_Data_2015$`Order Qty` *1.10) # 10% sales increase
order_Data_2015$`Order Weight`<- order_Data_2015$`Product Weight` * order_Data_2015$`Order Qty` # recalculate order weights
order_Data_2015$`Order Dt` <- str_replace_all(order_Data_2015$`Order Dt`,
"/14$|/15$","") #remove the years
#filter our wrench orders so we can calculate hammer projected orders
wrench_orders <- order_Data_2015 %>%
filter(`Product Id` == 1)
#Make a hammer_orders data frame
hammer_orders <- wrench_orders
hammer_orders$`Product Id` <- 4
hammer_orders$`Product Weight` <- 2.0
hammer_orders$`Order Weight`<- hammer_orders$`Product Weight` * hammer_orders$`Order Qty`
#put hammer orders into the order data frame
order_Data_2015 <- full_join(order_Data_2015,
hammer_orders)
for(i in 0:1){
#reverse engineer shipment data from order data
shipment_data_created <- order_Data_2015 %>%
group_by(`Order Dt`,Supplier,`Str Nbr`) %>%
summarise(ship_weight = sum(`Order Weight`))
#add shipment costs for x and y
ship_costs <- shipment_data_created %>%
mutate(ship_cost_x = ifelse(`Str Nbr` == "1" & Supplier == "A",
2540,
ifelse(`Str Nbr` == "2" & Supplier == "A",
1640,
1200))) %>%
mutate(ship_cost_y = ifelse(`Str Nbr` == "1" & Supplier == "A",
0.12*ship_weight,
ifelse(`Str Nbr` == "2" & Supplier == "B",
0.04*ship_weight,
0.07*ship_weight)))
#compare shipment costs per week
ship_costs <-ship_costs %>%
mutate(cheapest_shipping = ifelse(ship_cost_x> ship_cost_y,
ship_cost_y,
ship_cost_x)) %>%
mutate(cheapest_carrier = ifelse(ship_cost_x> ship_cost_y,
"y",
"x"))
#total the year
print(sum(ship_costs$cheapest_shipping))
#change supplier to be for second run
hammer_orders$Supplier <- "B"
#put new hammer orders into the order data frame
order_Data_2015 <- full_join(order_Data_2015,
hammer_orders)
}
# Supplier A is cheaper
332819.9 - 321998.6
#calculate the total cost
hammer_cost <- hammer_orders %>%
mutate(cost_a = `Order Qty`*.8) %>%
mutate(cost_a = `Order Qty`*.82)
View(hammer_cost)
#calculate the total cost
hammer_cost <- hammer_orders %>%
mutate(cost_a = `Order Qty`*.8) %>%
mutate(cost_b = `Order Qty`*.82)
sum(hammer_cost$cost_a)
sum(hammer_cost$cost_b)
332819.9 + 361426.4
(332819.9 + 361426.4) - (321998.6 + 370462.1)
View(order_Data_2015)
View(ship_costs)
#supplier A is cheaper overall
(332819.9 + 361426.4) - (321998.6 + 370462.1)
#supplier A is cheaper overall
(332819.9 + 361426.4)
#supplier A is cheaper overall
(332819.9 + 361426.4)
(321998.6 + 370462.1)
knitr::opts_chunk$set(echo = TRUE)
options(dplyr.summarise.inform = FALSE)
library(tidyverse)
order_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/orders.csv")
shipment_Data <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/shipments.csv")
rates <- read_csv("~/Documents/school/college/senior/ds/HW/HW3/carrier_rates.csv")
(321998.6 + 370462.1) # shipping plus total for supplier b
install.packages("shiny")
library(shiny)
library(shiny)
ui <- fluidPage(
)
ui <- fluidPage(
)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
ui <- fluidPage(
checkboxGroupInput(inputId = "checkbox1",
label = "choose")
)
runApp('app')
server <- function(input, output, session) {
}
ui <- fluidPage(
checkboxGroupInput(inputId = "checkbox1",
label = "choose")
)
runApp('app')
ui <- fluidPage(
# checkboxGroupInput(inputId = "checkbox1",
#                    label = "How are you feeling today?",
#                    choices = c("Happy", "Sad", "Angry"))
numericInput()
)
runApp('app')
runApp('app')
runApp('app')
?shinyApp(ui, server)
?ui
?fluidPage
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
View(diamonds)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('Documents/school/college/senior/ds/notes')
#### Libraries ####
library(tidyverse)
library(rvest)
library(leaflet)
library(shiny)
library(tidyverse)
runApp('Documents/school/college/senior/ds/notes')
runApp('Documents/school/college/senior/ds/notes')
runApp('Documents/school/college/senior/ds/notes')
runApp('Documents/school/college/senior/ds/notes')
runApp('Documents/school/college/senior/ds/notes')
runApp('Documents/school/college/senior/ds/notes')
runApp('Documents/school/college/senior/ds/notes')
library(tidyverse)
happiness <- read_csv("~/Documents/school/college/senior/ds/data_sets/world_happiness_2019.csv")
happiness <- read_csv("~/Documents/school/college/senior/ds/data_sets/world_happiness_2019.csv")
View(happiness)
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
View(happiness)
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
runApp('Documents/school/college/senior/ds/notes/DataExplore')
library(shiny)
#### Libraries ####
library(tidyverse)
library(rvest)
library(leaflet)
census_data <- read_csv("/Users/zeinhorn/Documents/school/college/senior/ds/notes/Census/Census_Data_2010.csv")
View(census_data)
ui <- fluidPage(
states <- geojson_read("https://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_500k.json",
what = "sp")
)
library(geojsonio)
ui <- fluidPage(
states <- geojson_read("https://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_500k.json",
what = "sp")
)
View(states@data)
census_data <- read_csv("/Users/zeinhorn/Documents/school/college/senior/ds/notes/Census/Census_Data_2010.csv")
states <- geojson_read("https://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_500k.json",
what = "sp")
state_pop_data <- census_data %>%
filter(NAME == STATE)
states@data <- left_join(states@data,
state_pop_data,
by = "NAME")
View(States@data)
View(states@data)
states <- geojson_read("https://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_500k.json",
what = "sp")
View(states@data)
states <- geojson_read("https://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_5m.json",
what = "sp")
states_data <- states #remember to make a copy!
View(states@data)
state_pop_data <- census_data %>%
filter(NAME == STATE) %>%
unique()
View(state_pop_data)
state_pop_data <- census_data %>%
filter(NAME == STATE) %>%
unique()
states_data@data <- left_join(states_data@data,
state_pop_data,
by = "NAME")
View(states_data@data)
states_data %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor = ~colors(POPULATION),
color = "black",
opacity = 1,
fillOpacity = .7) %>%
setView(-96, 37.8, 3) %>%
addLegend(pal = colors,
values = states_spdf@data$POPULATION)
bins <- c(0,1000000, 2500000, 5000000,7500000, 10000000, Inf)
colors <- colorBin(palette = "YlOrRd",
domain = states_data@data$POPULATION,
bins = bins)
states_data %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor = ~colors(POPULATION),
color = "black",
opacity = 1,
fillOpacity = .7) %>%
setView(-96, 37.8, 3) %>%
addLegend(pal = colors,
values = states_spdf@data$POPULATION)
states_data@data$POPULATION <- as.numeric(states_data@data$POPULATION)
states_data %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor = ~colors(POPULATION),
color = "black",
opacity = 1,
fillOpacity = .7) %>%
setView(-96, 37.8, 3) %>%
addLegend(pal = colors,
values = states_spdf@data$POPULATION)
states_data %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor = ~colors(POPULATION),
color = "black",
opacity = 1,
fillOpacity = .7) %>%
setView(-96, 37.8, 3) %>%
addLegend(pal = colors,
values = states_data@data$POPULATION)
states_data %>%
leaflet() %>%
# addTiles() %>%
addPolygons(fillColor = ~colors(POPULATION),
color = "black",
opacity = 1,
fillOpacity = .7) %>%
setView(-96, 37.8, 3) %>%
addLegend(pal = colors,
values = states_data@data$POPULATION)
states_data %>%
leaflet() %>%
# addTiles() %>%
addPolygons(fillColor = ~colors(POPULATION),
color = "black",
opacity = 1,
fillOpacity = .7,
popup = ~NAME) %>%
setView(-96, 37.8, 3) %>%
addLegend(pal = colors,
values = states_data@data$POPULATION)
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
runApp('Documents/school/college/senior/ds/notes/Census')
#### Libraries ####
library(tidyverse)
library(rvest)
library(leaflet)
#### Class 11/2/20 ####
basketball <- read_csv("~/Documents/school/college/senior/ds/data_sets/Basketball.csv")
View(basketball)
basketball_ftp <- basketball %>%
mutate(FTPercent = FTM/FTA)
basketball_ftp %>%
ggplot(aes(x = FTPercent,
y = Sagarin.Rating))
View(basketball_ftp)
basketball_ftp %>%
ggplot(aes(x = FTPercent,
y = Sagarin.Rating))+
geom_point(aes(color = factor(NCAA)))
# Let's graph possesions per game and turnovers per game
basketball %>%
ggplot(aes(x = PossessionsPerGame,
y = TOPerGame))+
geom_point(aes(color = factor(NCAA)))
# Let's graph possessions per game and oponent possessions per game
basketball %>%
ggplot(aes(x = PossessionsPerGame,
y = `O-PossessionsPerGame`))+
geom_point(aes(color = factor(NCAA)))
hist(basketball$PossessionsPerGame)
hist(basketball$`O-PossessionsPerGame`)
shiny::runApp('Documents/school/college/senior/ds/notes/Basketball')
runApp('Documents/school/college/senior/ds/notes/Basketball')
runApp('Documents/school/college/senior/ds/notes/Basketball')
runApp('Documents/school/college/senior/ds/notes/Basketball')
runApp('Documents/school/college/senior/ds/notes/Basketball')
runApp('Documents/school/college/senior/ds/notes/Basketball')
income_url <- "https://ny.curbed.com/2017/8/4/16099252/new-york-neighborhood-affordability"
income_data <- income_url %>%
read_html() %>%
html_node("table") %>%  #this makes a data frame :)
html_table()
income_url <- "https://ny.curbed.com/2017/8/4/16099252/new-york-neighborhood-affordability"
income_data <- income_url %>%
read_html() %>%
html_node(xpath = '//*[@id="nyc_table_wrapper"]') %>%  #this makes a data frame :)
html_table()
income_data <- income_url %>%
read_html() %>%
html_node(xpath = '/html/body/div/div[2]/div/div[2]') %>%  #this makes a data frame :)
html_table()
income_data <- income_url %>%
read_html() %>%
html_nodes(xpath = '/html/body/div/div[2]/div/div[2]') %>%  #this makes a data frame :)
html_table()
View(income_data)
income_data <- income_url %>%
read_html() %>%
html_node(xpath = '/html/body/div/div[2]/div/div[2]') %>%  #this makes a data frame :)
html_table()
redditData <- read_csv("MediumIncomes.csv")
redditData <- read_csv("MediumIncomes.csv")
library(shiny)
library(tidyverse)
redditData <- read_csv("MediumIncomes.csv")
redditData <- read_csv("MediumIncomes.csv")
setwd("~/Documents/school/college/senior/ds")
redditData <- read_csv("MediumIncomes.csv")
setwd("~/Documents/school/college/senior/ds/HW/HW4/nycsubwayfooddesert/FoodDesert")
redditData <- read_csv("MediumIncomes.csv")
redditData <- read_csv("MedianIncomes.csv")
redditData <- read_csv("MedianIncomes.csv")
medianIncomes <- read_csv("MedianIncomes.csv")
View(medianIncomes)
